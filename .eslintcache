[{"D:\\code\\whatsapp-clone\\src\\index.js":"1","D:\\code\\whatsapp-clone\\src\\reportWebVitals.js":"2","D:\\code\\whatsapp-clone\\src\\App.js":"3","D:\\code\\whatsapp-clone\\src\\Sidebar.js":"4","D:\\code\\whatsapp-clone\\src\\SidebarChat.js":"5","D:\\code\\whatsapp-clone\\src\\Chat.js":"6","D:\\code\\whatsapp-clone\\src\\firebase\\firebase.js":"7","D:\\code\\whatsapp-clone\\src\\firebase\\ChatApi.js":"8","D:\\code\\whatsapp-clone\\src\\Login.js":"9","D:\\code\\whatsapp-clone\\src\\StateProvider.js":"10","D:\\code\\whatsapp-clone\\src\\reducer.js":"11"},{"size":716,"mtime":1612126198954,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":887,"mtime":1614472369177,"results":"15","hashOfConfig":"13"},{"size":2498,"mtime":1612128647117,"results":"16","hashOfConfig":"13"},{"size":1582,"mtime":1612140000645,"results":"17","hashOfConfig":"13"},{"size":4023,"mtime":1612138239902,"results":"18","hashOfConfig":"13"},{"size":729,"mtime":1611882003863,"results":"19","hashOfConfig":"13"},{"size":158,"mtime":1611972718211,"results":"20","hashOfConfig":"13"},{"size":1208,"mtime":1612127824397,"results":"21","hashOfConfig":"13"},{"size":378,"mtime":1612125384498,"results":"22","hashOfConfig":"13"},{"size":434,"mtime":1612126022179,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"12h9bkr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\code\\whatsapp-clone\\src\\index.js",[],["50","51"],"D:\\code\\whatsapp-clone\\src\\reportWebVitals.js",[],"D:\\code\\whatsapp-clone\\src\\App.js",["52","53","54"],"D:\\code\\whatsapp-clone\\src\\Sidebar.js",["55"],"import React, { useState, useEffect } from 'react';\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { SearchOutlined } from \"@material-ui/icons\";\r\n\r\nimport './Sidebar.css';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from './firebase/firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n    const [rooms, setRooms] = useState([]);\r\n    const [ { user }, dispatch ] = useStateValue();\r\n\r\n    useEffect ( () => {\r\n        const unsubscribe = db\r\n            .collection('rooms')\r\n            .onSnapshot(\r\n                (snapshot) => (\r\n                    setRooms(\r\n                        snapshot.docs.map((doc) => (\r\n                            {\r\n                                id:doc.id,\r\n                                data:doc.data()\r\n                            }\r\n                        ))\r\n                    )\r\n                )\r\n            );\r\n\r\n            return () => {\r\n                unsubscribe();\r\n            }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src={ user?.photoURL}/>\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon/> \r\n                    </IconButton> \r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined/>\r\n                    <input placeholder=\"Search or start new chat\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__chats\">\r\n                <SidebarChat addNewChat/>\r\n                {\r\n                    rooms.map( (room) => (\r\n                        <SidebarChat \r\n                            key={room.id}\r\n                            id={room.id}\r\n                            name={room.data.name}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","D:\\code\\whatsapp-clone\\src\\SidebarChat.js",[],"D:\\code\\whatsapp-clone\\src\\Chat.js",["56"],"import React, { useState, useEffect } from 'react'\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { useParams } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\n\r\nimport './Chat.css';\r\nimport db from './firebase/firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Chat() {\r\n    const [seed, setSeed] = useState('');\r\n    const [input, setInput] = useState('');\r\n    const { roomId } = useParams();\r\n    const [ roomName, setRoomName ] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [ {user}, dispatch] = useStateValue();\r\n\r\n    useEffect( () => {\r\n        if(roomId) {\r\n          db.collection(\"rooms\")\r\n            .doc(roomId)\r\n            .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n          \r\n          db.collection(\"rooms\")\r\n            .doc(roomId)\r\n            .collection(\"messages\")\r\n            .orderBy('timestamp','asc')\r\n            .onSnapshot( (snapshot) => \r\n                setMessages(snapshot.docs.map((doc) => doc.data())\r\n             )\r\n            );\r\n        }\r\n    }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault(); //stop from refreshing\r\n        console.log(\"you typed >>>\", input);\r\n        \r\n      db.collection('rooms')\r\n        .doc(roomId)\r\n        .collection('messages')\r\n        .add(\r\n            {\r\n                message: input,\r\n                name: user.displayName,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n            }\r\n        )\r\n        setInput(\"\");\r\n    }\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                \r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>Last seen at {\" \"}\r\n                        {\r\n                            new Date(messages[messages.length - 1]?.timestamp?.toDate()).toUTCString()\r\n                        }\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat__body\">\r\n                { \r\n                    messages.map( (message) => (\r\n                        <p className={`chat__message ${message.name === user.displayName && 'chat__receiver'}`}>\r\n                            <span className=\"chat__name\">{message.name}</span>\r\n                            {message.message}\r\n                            <span className=\"chat__timestamp\">\r\n                                {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                            </span>\r\n                        </p>\r\n                    ))\r\n                }                \r\n            </div>\r\n            <div className=\"chat__footer\">\r\n                <InsertEmoticonIcon/>\r\n                <form>\r\n                    <input \r\n                        value={input}\r\n                        onChange={ (e) => setInput(e.target.value)}\r\n                        placeholder=\"Type a message\"\r\n                        type=\"text\" />\r\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","D:\\code\\whatsapp-clone\\src\\firebase\\firebase.js",[],"D:\\code\\whatsapp-clone\\src\\firebase\\ChatApi.js",[],"D:\\code\\whatsapp-clone\\src\\Login.js",["57"],"import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport './Login.css';\r\nimport { auth, provider } from './firebase/firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from './reducer';\r\n\r\nfunction Login() {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                dispatch(\r\n                    {\r\n                        type: actionTypes.SET_USER,\r\n                        user: result.user\r\n                    }\r\n                )\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img\r\n                  src=\"http://www.kmbnaxos.com/files/5824/ckfinder/images/WhatsApp_Logo-edited.jpg\"\r\n                  alt=\"\"/>\r\n                <div className=\"login__text\">\r\n                    <h1>Sign in to WhatsApp</h1>\r\n                </div>\r\n\r\n                <Button onClick={signIn}>Sign In With Google</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","D:\\code\\whatsapp-clone\\src\\StateProvider.js",[],"D:\\code\\whatsapp-clone\\src\\reducer.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":7,"column":8,"nodeType":"64","messageId":"65","endLine":7,"endColumn":13},{"ruleId":"62","severity":1,"message":"66","line":12,"column":12,"nodeType":"64","messageId":"65","endLine":12,"endColumn":16},{"ruleId":"62","severity":1,"message":"67","line":12,"column":19,"nodeType":"64","messageId":"65","endLine":12,"endColumn":27},{"ruleId":"62","severity":1,"message":"67","line":15,"column":23,"nodeType":"64","messageId":"65","endLine":15,"endColumn":31},{"ruleId":"62","severity":1,"message":"67","line":19,"column":21,"nodeType":"64","messageId":"65","endLine":19,"endColumn":29},{"ruleId":"68","severity":1,"message":"69","line":10,"column":12,"nodeType":"70","messageId":"71","endLine":10,"endColumn":14},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'dispatch' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]